Алгоритм и структура программы:

1. Структура ListNode
   Структура ListNode представляет элемент списка. Она содержит следующие поля:
   - str (string): строковое поле
   - num (int): целочисленное поле
   - dbl (double): поле с плавающей точкой
   - next (ListNode*): указатель на следующий элемент списка
   - prev (ListNode*): указатель на предыдущий элемент списка

2. Структура List
   Структура List представляет сам список. Она содержит следующие поля:
   - head (ListNode*): указатель на первый элемент списка
   - tail (ListNode*): указатель на последний элемент списка

   Структура List также содержит следующие функции для работы со списком:
   - addFront(const std::string& s, int n, double d): добавляет новый элемент в начало списка
   - addBack(const std::string& s, int n, double d): добавляет новый элемент в конец списка
   - addAfter(ListNode* node, const std::string& s, int n, double d): добавляет новый элемент после заданного элемента
   - addBefore(ListNode* node, const std::string& s, int n, double d): добавляет новый элемент перед заданным элементом
   - removeByName(const std::string& s): удаляет элемент с заданным строковым полем из списка
   - print(): выводит содержание списка на экран

3. Функция main()
   Функция main() содержит сценарий работы со списком, используя разработанный инструментарий. В ней создается экземпляр структуры List,
затем добавляются элементы в список с помощью функций addFront(), addBack(), addAfter() и addBefore(). Далее выводится содержание списка на 
экран с помощью функции print(). Затем из списка удаляется элемент с помощью функции removeByName(), и содержание списка выводится на экран 
еще раз.

Программа использует двусвязный список, где каждый элемент имеет указатели на следующий и предыдущий элементы. Это позволяет эффективно 
выполнять операции вставки и удаления элементов в любом месте списка. Функции addFront(), addBack(), addAfter() и addBefore() обновляют 
указатели соответствующим образом, чтобы поддерживать целостность структуры списка.

Функция removeByName() проходит по списку и удаляет первый найденный элемент с заданным строковым полем, обновляя указатели соседних элементов
и освобождая память удаленного элемента.

Функция print() проходит по списку и выводит содержание каждого элемента на экран.

В целом, программа демонстрирует реализацию двусвязного списка с использованием структур и функций для работы с элементами списка.
